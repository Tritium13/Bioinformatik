// @File(label = "Input directory", style = "directory") input
// @File(label = "Output directory", style = "directory") output
// @String(label = "File suffix", value = "BRP.tif") suffix
// @String(label = "File2 suffix", value = "HRP_mask.tif") suffix2

/*
 	Macro template to process multiple images in a folder
 */

 
var outputDir // global variable to be passed to function later
var inputDir
outputDir = File.getName(output); // retrieves the folder name string of the master input folder selected by the user above
inputDir = File.getName(input);


setBatchMode(false);
processFolder(input);

// scans folders + subfolders for files with correct suffix

function processFolder(input) {
	list = getFileList(input);
	list = Array.sort(list);
	for (i = 0; i < list.length; i++) {		
		if(File.isDirectory(input + File.separator + list[i]))
			processFolder(input + File.separator + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, output, list[i]);
		if(endsWith(list[i], suffix2))
			processFile(input, output, list[i]);
	}
}


//funktioniert---------------------------//


function processFile(input, output, file){
	print("Processing: " + file);
	open(input + File.separator + file);
}
	images = getList("image.titles");
	j = 0;
	do {
		image_brp = images[j];
		image_hrp = images[j + 1];
		
		imageCalculator("substract create", image_brp, image_hrp);
		run("Fire");
		run("Threshold...");

		// macros stops for manual adjustment of threshold
		waitForUser("Set correct threshold and cut \n out all areas of no interest out of nerve.");
		// hitting OK in the textbox will continue macro

		id = image_hrp;
		id2 = replace(id, "_HRP_mask.tif" , "");
		
		getThreshold(lower, upper);
		saveDir = replace(input, inputDir, outputDir); // replaces the input folder name (string) with the output folder name (string)
		File.makeDirectory(saveDir); // makes the above directory
		//print(saveDir  + "/" + id2 + "/" + image_brp + "_T" + lower);
		saveAs("TIFF", saveDir  + "/" + id2 + "/" + image_brp + "_T" + lower);
		j = j + 2;
		}
		while (j < images.length);
	
	close("*");

showMessage("All masks created!");
