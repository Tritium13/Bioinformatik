// @File(label = "Input directory", style = "directory") input
// @File(label = "Output directory", style = "directory") output
// @String(label = "File suffix", value = "HRP.tif") suffix

/*
 * Macro template to process multiple images in a folder
 */

 
var outputDir // global variable to be passed to function later
var inputDir
outputDir = File.getName(output); // retrieves the folder name string of the master input folder selected by the user above
inputDir = File.getName(input);


setBatchMode(false);
processFolder(input);

// scans folders + subfolders for files with correct suffix

function processFolder(input) {
	list = getFileList(input);
	list = Array.sort(list);
	for (i = 0; i < list.length; i++) {		
		if(File.isDirectory(input + File.separator + list[i]))
			processFolder(input + File.separator + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, output, list[i]);
	}
}

//funktioniert---------------------------//

function processFile(input, output, file){
	// Do the processing here by adding your own code.
	// Leave the print statements until things work, then remove them.
	print("Processing: " + file);
	open(input + File.separator + file);
	run("Gaussian Blur...", "sigma=1");
	run("Fire");
	run("Threshold...");

	// macros stops for manual adjustment of threshold
	waitForUser("Set correct threshold and cut \n out all areas of no interest out of nerve.");
	// hitting OK in the textbox will continue macro

	setOption("BlackBackground", false);
	run("Convert to Mask");
	run("Invert LUT");
	run("Invert");

	id = File.nameWithoutExtension;
	saveDir = replace(input, inputDir, outputDir); // replaces the input folder name (string) with the output folder name (string)
	File.makeDirectory(saveDir); // makes the above directory
	saveAs("TIFF", saveDir + id + "_mask");
	close();
}
showMessage("All masks created!");
